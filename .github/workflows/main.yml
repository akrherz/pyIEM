
name: CI
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    defaults:
      run:
        # Ensures environment gets sourced right
        shell: bash -l {0}
    name: Python (${{ matrix.PYTHON_VERSION }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON_VERSION: ["3.9", "3.11", "3.12"]
    env:
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    steps:
    - uses: actions/checkout@v4

    - name: Add /etc/hosts entries
      run: |
        cat .github/workflows/etchosts.txt | sudo tee -a /etc/hosts

    # setup conda-forge with micromamba
    - name: Setup Python
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        condarc: |
          channels:
            - conda-forge
            - defaults
        create-args: >-
          python=${{ env.PYTHON_VERSION }}
        environment-name: prod
        cache-environment: true

    - name: Setup Postgres
      run: |
        git clone --depth 1 https://github.com/akrherz/iem-database.git database
        git clone --depth 1 https://github.com/akrherz/ci_tooling.git .ci_tooling
        . .ci_tooling/postgres.sh
        cd database; sh bootstrap.sh
        python schema_manager.py
        python store_test_data.py
        psql -f data/postgis/cwsu.db -U mesonet postgis

    - name: Setup Memcached
      run: |
        . .ci_tooling/memcached.sh

    - name: Install pyiem
      run: |
        set -e
        python -m pip install . --upgrade --no-deps

    - name: Populate Data
      run: |
        set -e
        sudo ln -s /home/runner/micromamba /opt/miniconda3
        python util/create_transformed_parquet.py --justgeodf
        python util/insert_testing_data.py
        sudo mkdir -p /opt/iem/config
        sudo wget -q -O /opt/iem/config/navbar.json https://raw.githubusercontent.com/akrherz/iem/main/config/navbar.json

    - name: Run Tests
      run: |
        set -e
        # get pqinsert available as a dummy command
        export PATH=$PATH:$(pwd)/tests/bin
        # xdist and coverage seems to necessitate this
        python -m pytest --cov=pyiem -n 4 --mpl --mpl-results-path=mplresults
        python -m coverage xml

    - name: Code coverage
      if: ${{ matrix.PYTHON_VERSION == '3.12' }}
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.xml

    - name: Build Docs
      if: ${{ matrix.PYTHON_VERSION == '3.12' }}
      run: |
        conda install sphinx
        cd docs
        make html
        touch build/html/.nojekyll

    - name: Deploy Docs
      if: ${{ matrix.PYTHON_VERSION == '3.12' }}
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: docs/build/html # The folder the action should deploy. This example folder is generated by Sphinx
