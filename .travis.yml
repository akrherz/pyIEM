sudo: required

dist: xenial
services:
  - postgresql

addons:
  postgresql: 10
  artifacts:
    target_paths: /$PYTHON_VERSION
    paths: "mplresults"
  apt:
    packages:
      - postgresql-10-postgis-2.4
  hosts:
    - iemdb
    - iemdb-hads
    - iemdb-mos
    - iemdb2
env:
  global:
    - MPLLOCALFREETYPE=1
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.6
language: python

install:
  # Install miniconda
  # -----------------
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

  # Create the basic testing environment
  # ------------------------------------
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls yes
  - conda update -q conda
  - . $HOME/miniconda/etc/profile.d/conda.sh
  # Prioritize conda-forge channel
  - conda config --prepend channels conda-forge
  - conda config --set channel_priority strict
  - conda create -n test-environment python=$PYTHON_VERSION
  - conda activate test-environment
  
  # Customise the testing environment
  # ---------------------------------
  - conda install -q --file conda_requirements.txt
  - pip install -r pip_requirements.txt


before_script:
  - export PATH="/usr/lib/postgresql/10/bin:$PATH"
  - psql -c 'create database postgis;' -U postgres
  - psql -c 'create user nobody;' -U postgres
  - psql -c 'create user apache;' -U postgres
  - psql -c 'create database portfolio;' -U postgres
  - psql -c 'create database iem;' -U postgres
  - psql -c 'create database mesosite;' -U postgres
  - psql -c 'create database asos;' -U postgres
  - psql -c 'create database hads;' -U postgres
  - psql -c 'create database mos;' -U postgres
  - psql -U postgres -f data/schema/iem.sql iem
  - psql -U postgres -f data/schema/postgis.sql postgis
  - psql -U postgres -f data/schema/portfolio.sql portfolio
  - psql -U postgres -f data/schema/mesosite.sql mesosite
  - psql -U postgres -f data/schema/asos.sql asos
  - psql -U postgres -f data/schema/hads.sql hads
  - psql -U postgres -f data/schema/mos.sql mos

script:
  - coverage run --source=pyiem setup.py test --addopts "--mpl --mpl-results-path=mplresults";

after_success:
  - if [[ "$PYTHON_VERSION" == 2* ]]; then
      coveralls;
    fi
